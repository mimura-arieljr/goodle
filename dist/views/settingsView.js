export function settingsView(settingsPage, mainPage) {
    const settingsBtn = document.getElementById("settings-btn");
    const quitBtn = document.getElementById("quit-btn");
    const backBtn = document.getElementById("settings-back-btn");
    const darkModeBtn = document.getElementById("dark-mode-btn");
    const labelForDarkMode = document.querySelector("label[for='dark-mode-btn']");
    const menuButtons = document.querySelectorAll(".menu-btn");
    const goodleText = document.getElementById("goodle-text");
    const backgroundWrap = document.querySelectorAll(".background-wrap");
    const LIGHT_MODE_BACKGROUND = settingsBtn.addEventListener("click", () => {
        // Control pages UI
        settingsPage.classList.remove("translate-x-full");
        mainPage.classList.remove("hidden");
        mainPage.classList.add("transition-transform", "duration-300", "ease-in-out", "translate-x-[-10%]"); // Shift main-page buttons
        mainPage.classList.remove("xs:opacity-100");
        // Control buttons and text UI
        menuButtons.forEach((btn) => btn.disabled = true);
        settingsBtn.classList.add("hidden");
        goodleText?.classList.add("opacity-90");
    });
    backBtn.addEventListener("click", () => {
        settingsPage.classList.add("translate-x-full");
        mainPage.classList.remove("translate-x-[-10%]");
        mainPage.classList.add("xs:opacity-100");
        menuButtons.forEach((btn) => btn.disabled = false);
        settingsBtn.classList.remove("hidden");
        goodleText?.classList.remove("opacity-50");
    });
    darkModeBtn.addEventListener("click", (event) => {
        // Prevent default action, e.g., form submission
        event.preventDefault();
        // Toggle dark mode
        document.body.classList.toggle("dark");
        backgroundWrap.forEach((wrap) => {
            if (wrap.classList.contains("custom-dark-full")) {
                // If "custom-dark-full" is present, remove it and add the other classes
                wrap.classList.remove("custom-dark-full");
                wrap.classList.add("custom-light-full");
                labelForDarkMode.textContent = "Enable Dark Mode";
            }
            else {
                // Otherwise, add "custom-dark-full" and remove the other classes
                wrap.classList.remove("custom-light-full");
                wrap.classList.add("custom-dark-full");
                labelForDarkMode.textContent = "Disable Dark Mode";
            }
        });
    });
    quitBtn.addEventListener("click", () => {
        window.location.reload(); // TODO: Add implementation to quit the app, remove session
    });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2V0dGluZ3NWaWV3LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3ZpZXdzL3NldHRpbmdzVmlldy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLFVBQVUsWUFBWSxDQUFDLFlBQXlCLEVBQUUsUUFBcUI7SUFDekUsTUFBTSxXQUFXLEdBQUcsUUFBUSxDQUFDLGNBQWMsQ0FBQyxjQUFjLENBQXNCLENBQUM7SUFDakYsTUFBTSxPQUFPLEdBQUcsUUFBUSxDQUFDLGNBQWMsQ0FBQyxVQUFVLENBQXNCLENBQUM7SUFDekUsTUFBTSxPQUFPLEdBQUcsUUFBUSxDQUFDLGNBQWMsQ0FBQyxtQkFBbUIsQ0FBc0IsQ0FBQztJQUNsRixNQUFNLFdBQVcsR0FBRyxRQUFRLENBQUMsY0FBYyxDQUFDLGVBQWUsQ0FBc0IsQ0FBQztJQUNsRixNQUFNLGdCQUFnQixHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsNEJBQTRCLENBQUMsQ0FBQztJQUM5RSxNQUFNLFdBQVcsR0FBRyxRQUFRLENBQUMsZ0JBQWdCLENBQUMsV0FBVyxDQUFrQyxDQUFDO0lBQzVGLE1BQU0sVUFBVSxHQUFHLFFBQVEsQ0FBQyxjQUFjLENBQUMsYUFBYSxDQUFDLENBQUM7SUFDMUQsTUFBTSxjQUFjLEdBQUcsUUFBUSxDQUFDLGdCQUFnQixDQUFDLGtCQUFrQixDQUE0QixDQUFDO0lBRWhHLE1BQU0scUJBQXFCLEdBRTNCLFdBQVcsQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsR0FBRyxFQUFFO1FBQ3ZDLG1CQUFtQjtRQUNuQixZQUFZLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO1FBQ2xELFFBQVEsQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ3BDLFFBQVEsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLHNCQUFzQixFQUFFLGNBQWMsRUFBRSxhQUFhLEVBQUUsb0JBQW9CLENBQUMsQ0FBQyxDQUFDLDBCQUEwQjtRQUMvSCxRQUFRLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO1FBRTVDLDhCQUE4QjtRQUM5QixXQUFXLENBQUMsT0FBTyxDQUFDLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxHQUFHLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxDQUFDO1FBQ2xELFdBQVcsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ3BDLFVBQVUsRUFBRSxTQUFTLENBQUMsR0FBRyxDQUFDLFlBQVksQ0FBQyxDQUFDO0lBQzVDLENBQUMsQ0FBQyxDQUFDO0lBRUgsT0FBTyxDQUFDLGdCQUFnQixDQUFDLE9BQU8sRUFBRSxHQUFHLEVBQUU7UUFDbkMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsa0JBQWtCLENBQUMsQ0FBQztRQUMvQyxRQUFRLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDO1FBQ2hELFFBQVEsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLGdCQUFnQixDQUFDLENBQUM7UUFFekMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsR0FBRyxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUMsQ0FBQztRQUNuRCxXQUFXLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUN2QyxVQUFVLEVBQUUsU0FBUyxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsQ0FBQztJQUMvQyxDQUFDLENBQUMsQ0FBQztJQUVILFdBQVcsQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxLQUFLLEVBQUUsRUFBRTtRQUM1QyxnREFBZ0Q7UUFDaEQsS0FBSyxDQUFDLGNBQWMsRUFBRSxDQUFDO1FBRXZCLG1CQUFtQjtRQUNuQixRQUFRLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDdkMsY0FBYyxDQUFDLE9BQU8sQ0FBQyxDQUFDLElBQUksRUFBRSxFQUFFO1lBQzVCLElBQUksSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsa0JBQWtCLENBQUMsRUFBRSxDQUFDO2dCQUM5Qyx3RUFBd0U7Z0JBQ3hFLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLGtCQUFrQixDQUFDLENBQUM7Z0JBQzFDLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLG1CQUFtQixDQUFDLENBQUM7Z0JBRXhDLGdCQUFpQixDQUFDLFdBQVcsR0FBRyxrQkFBa0IsQ0FBQztZQUN2RCxDQUFDO2lCQUFNLENBQUM7Z0JBQ0osaUVBQWlFO2dCQUNqRSxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO2dCQUMzQyxJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO2dCQUV2QyxnQkFBaUIsQ0FBQyxXQUFXLEdBQUcsbUJBQW1CLENBQUM7WUFDeEQsQ0FBQztRQUNMLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQyxDQUFDLENBQUM7SUFFSCxPQUFPLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxFQUFFLEdBQUcsRUFBRTtRQUNuQyxNQUFNLENBQUMsUUFBUSxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUMsMkRBQTJEO0lBQ3pGLENBQUMsQ0FBQyxDQUFDO0FBQ1AsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBzZXR0aW5nc1ZpZXcoc2V0dGluZ3NQYWdlOiBIVE1MRWxlbWVudCwgbWFpblBhZ2U6IEhUTUxFbGVtZW50KSB7XG4gICAgY29uc3Qgc2V0dGluZ3NCdG4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNldHRpbmdzLWJ0blwiKSBhcyBIVE1MQnV0dG9uRWxlbWVudDtcbiAgICBjb25zdCBxdWl0QnRuID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJxdWl0LWJ0blwiKSBhcyBIVE1MQnV0dG9uRWxlbWVudDtcbiAgICBjb25zdCBiYWNrQnRuID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzZXR0aW5ncy1iYWNrLWJ0blwiKSBhcyBIVE1MQnV0dG9uRWxlbWVudDtcbiAgICBjb25zdCBkYXJrTW9kZUJ0biA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZGFyay1tb2RlLWJ0blwiKSBhcyBIVE1MQnV0dG9uRWxlbWVudDtcbiAgICBjb25zdCBsYWJlbEZvckRhcmtNb2RlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcImxhYmVsW2Zvcj0nZGFyay1tb2RlLWJ0biddXCIpO1xuICAgIGNvbnN0IG1lbnVCdXR0b25zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5tZW51LWJ0blwiKSBhcyBOb2RlTGlzdE9mPEhUTUxCdXR0b25FbGVtZW50PjtcbiAgICBjb25zdCBnb29kbGVUZXh0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJnb29kbGUtdGV4dFwiKTtcbiAgICBjb25zdCBiYWNrZ3JvdW5kV3JhcCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuYmFja2dyb3VuZC13cmFwXCIpIGFzIE5vZGVMaXN0T2Y8SFRNTEVsZW1lbnQ+O1xuXG4gICAgY29uc3QgTElHSFRfTU9ERV9CQUNLR1JPVU5EID0gXG5cbiAgICBzZXR0aW5nc0J0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgICAvLyBDb250cm9sIHBhZ2VzIFVJXG4gICAgICAgIHNldHRpbmdzUGFnZS5jbGFzc0xpc3QucmVtb3ZlKFwidHJhbnNsYXRlLXgtZnVsbFwiKTtcbiAgICAgICAgbWFpblBhZ2UuY2xhc3NMaXN0LnJlbW92ZShcImhpZGRlblwiKTtcbiAgICAgICAgbWFpblBhZ2UuY2xhc3NMaXN0LmFkZChcInRyYW5zaXRpb24tdHJhbnNmb3JtXCIsIFwiZHVyYXRpb24tMzAwXCIsIFwiZWFzZS1pbi1vdXRcIiwgXCJ0cmFuc2xhdGUteC1bLTEwJV1cIik7IC8vIFNoaWZ0IG1haW4tcGFnZSBidXR0b25zXG4gICAgICAgIG1haW5QYWdlLmNsYXNzTGlzdC5yZW1vdmUoXCJ4czpvcGFjaXR5LTEwMFwiKTtcblxuICAgICAgICAvLyBDb250cm9sIGJ1dHRvbnMgYW5kIHRleHQgVUlcbiAgICAgICAgbWVudUJ1dHRvbnMuZm9yRWFjaCgoYnRuKSA9PiBidG4uZGlzYWJsZWQgPSB0cnVlKTtcbiAgICAgICAgc2V0dGluZ3NCdG4uY2xhc3NMaXN0LmFkZChcImhpZGRlblwiKTtcbiAgICAgICAgZ29vZGxlVGV4dD8uY2xhc3NMaXN0LmFkZChcIm9wYWNpdHktOTBcIik7XG4gICAgfSk7XG5cbiAgICBiYWNrQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICAgIHNldHRpbmdzUGFnZS5jbGFzc0xpc3QuYWRkKFwidHJhbnNsYXRlLXgtZnVsbFwiKTtcbiAgICAgICAgbWFpblBhZ2UuY2xhc3NMaXN0LnJlbW92ZShcInRyYW5zbGF0ZS14LVstMTAlXVwiKTtcbiAgICAgICAgbWFpblBhZ2UuY2xhc3NMaXN0LmFkZChcInhzOm9wYWNpdHktMTAwXCIpO1xuXG4gICAgICAgIG1lbnVCdXR0b25zLmZvckVhY2goKGJ0bikgPT4gYnRuLmRpc2FibGVkID0gZmFsc2UpO1xuICAgICAgICBzZXR0aW5nc0J0bi5jbGFzc0xpc3QucmVtb3ZlKFwiaGlkZGVuXCIpO1xuICAgICAgICBnb29kbGVUZXh0Py5jbGFzc0xpc3QucmVtb3ZlKFwib3BhY2l0eS01MFwiKTtcbiAgICB9KTtcblxuICAgIGRhcmtNb2RlQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZXZlbnQpID0+IHtcbiAgICAgICAgLy8gUHJldmVudCBkZWZhdWx0IGFjdGlvbiwgZS5nLiwgZm9ybSBzdWJtaXNzaW9uXG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICAgICAgLy8gVG9nZ2xlIGRhcmsgbW9kZVxuICAgICAgICBkb2N1bWVudC5ib2R5LmNsYXNzTGlzdC50b2dnbGUoXCJkYXJrXCIpO1xuICAgICAgICBiYWNrZ3JvdW5kV3JhcC5mb3JFYWNoKCh3cmFwKSA9PiB7XG4gICAgICAgICAgICBpZiAod3JhcC5jbGFzc0xpc3QuY29udGFpbnMoXCJjdXN0b20tZGFyay1mdWxsXCIpKSB7XG4gICAgICAgICAgICAgICAgLy8gSWYgXCJjdXN0b20tZGFyay1mdWxsXCIgaXMgcHJlc2VudCwgcmVtb3ZlIGl0IGFuZCBhZGQgdGhlIG90aGVyIGNsYXNzZXNcbiAgICAgICAgICAgICAgICB3cmFwLmNsYXNzTGlzdC5yZW1vdmUoXCJjdXN0b20tZGFyay1mdWxsXCIpO1xuICAgICAgICAgICAgICAgIHdyYXAuY2xhc3NMaXN0LmFkZChcImN1c3RvbS1saWdodC1mdWxsXCIpO1xuXG4gICAgICAgICAgICAgICAgbGFiZWxGb3JEYXJrTW9kZSEudGV4dENvbnRlbnQgPSBcIkVuYWJsZSBEYXJrIE1vZGVcIjtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgLy8gT3RoZXJ3aXNlLCBhZGQgXCJjdXN0b20tZGFyay1mdWxsXCIgYW5kIHJlbW92ZSB0aGUgb3RoZXIgY2xhc3Nlc1xuICAgICAgICAgICAgICAgIHdyYXAuY2xhc3NMaXN0LnJlbW92ZShcImN1c3RvbS1saWdodC1mdWxsXCIpO1xuICAgICAgICAgICAgICAgIHdyYXAuY2xhc3NMaXN0LmFkZChcImN1c3RvbS1kYXJrLWZ1bGxcIik7XG5cbiAgICAgICAgICAgICAgICBsYWJlbEZvckRhcmtNb2RlIS50ZXh0Q29udGVudCA9IFwiRGlzYWJsZSBEYXJrIE1vZGVcIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfSk7XG5cbiAgICBxdWl0QnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTsgLy8gVE9ETzogQWRkIGltcGxlbWVudGF0aW9uIHRvIHF1aXQgdGhlIGFwcCwgcmVtb3ZlIHNlc3Npb25cbiAgICB9KTtcbn1cbiJdfQ==