import { logout } from "../utils/sessionManager.js";
import { saveToStorage } from "../utils/storageManager.js";
export function settingsView(settingsPage, mainPage) {
    // form handlers
    const settingsForm = document.getElementById("settings-form");
    const scoringCheckbox = document.getElementById("enable-scoring");
    const timerInput = document.getElementById("timer");
    const numQuestionsInput = document.getElementById("num-questions");
    // button handlers
    const settingsBtn = document.getElementById("settings-btn");
    const quitBtn = document.getElementById("quit-btn");
    const backBtn = document.getElementById("settings-back-btn");
    const darkModeBtn = document.getElementById("dark-mode-btn");
    const labelForDarkMode = document.querySelector("label[for='dark-mode-btn']");
    const menuButtons = document.querySelectorAll(".menu-btn");
    // text and background handlers
    const goodleText = document.getElementById("goodle-text");
    const settingsSavedText = document.getElementById("settings-saved-text");
    const backgroundWrap = document.querySelectorAll(".background-wrap");
    const LIGHT_MODE_BACKGROUND = 'custom-light-full';
    const DARK_MODE_BACKGROUND = 'custom-dark-full';
    const LIGHT_GRID_BACKGROUND = 'custom-light-grid-overlay';
    const DARK_GRID_BACKGROUND = 'custom-dark-grid-overlay';
    settingsBtn.addEventListener("click", () => {
        // Control pages UI
        settingsPage.classList.remove("translate-x-full");
        mainPage.classList.remove("hidden");
        mainPage.classList.add("transition-transform", "duration-300", "ease-in-out", "translate-x-[-10%]"); // Shift main-page buttons
        mainPage.classList.remove("xs:opacity-100");
        // Control buttons and text UI
        menuButtons.forEach((btn) => btn.disabled = true);
        menuButtons.forEach((btn) => btn.classList.add("opacity-50"));
        goodleText?.classList.add("opacity-50");
    });
    backBtn.addEventListener("click", () => {
        settingsPage.classList.add("translate-x-full");
        mainPage.classList.remove("translate-x-[-10%]");
        mainPage.classList.add("xs:opacity-100");
        menuButtons.forEach((btn) => btn.disabled = false);
        menuButtons.forEach((btn) => btn.classList.remove("opacity-50"));
        goodleText?.classList.remove("opacity-50");
    });
    darkModeBtn.addEventListener("click", (event) => {
        // Prevent default action, e.g., form submission
        event.preventDefault();
        // Toggle dark mode
        document.body.classList.toggle("dark");
        backgroundWrap.forEach((wrap) => {
            if (wrap.classList.contains(DARK_GRID_BACKGROUND)) {
                // If dark mode is present, remove it and add the other classes
                wrap.classList.remove(DARK_GRID_BACKGROUND);
                document.body.classList.remove("bg-custom-dark");
                wrap.classList.add(LIGHT_GRID_BACKGROUND);
                labelForDarkMode.textContent = "Dark Mode";
            }
            else {
                // Otherwise, add dark mode and remove the other classes
                wrap.classList.remove(LIGHT_GRID_BACKGROUND);
                document.body.classList.add("bg-custom-dark");
                wrap.classList.add(DARK_GRID_BACKGROUND);
                labelForDarkMode.textContent = "Light Mode";
            }
        });
    });
    settingsForm.addEventListener("submit", (e) => {
        e.preventDefault();
        // Save values to sessionStorage
        saveToStorage("enableScoring", scoringCheckbox.checked.toString());
        saveToStorage("timePerQuestion", timerInput.value);
        saveToStorage("numberOfQuestions", numQuestionsInput.value);
        // Show and hide the text to inform user
        settingsSavedText?.classList.remove("hidden");
        setTimeout(() => {
            settingsSavedText?.classList.add("hidden");
        }, 3000);
    });
    quitBtn.addEventListener("click", () => {
        // TODO: Add diaglog box to verify logout
        logout();
    });
}
//# sourceMappingURL=data:application/json;base64,