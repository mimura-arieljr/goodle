import { encryptText } from "../utils/stringManager.js";
import { secrets } from "../libs/secrets.js";
export function loginView(loginPage, mainPage) {
    const loginForm = document.getElementById("login-form");
    const invalidPassword = document.getElementById("invalid-password");
    loginForm.addEventListener("submit", async (e) => {
        e.preventDefault();
        const passwordInput = document.getElementById("password")?.value;
        const encryptedInput = await encryptText(passwordInput);
        if (secrets[0] !== encryptedInput) {
            invalidPassword.classList.remove("hidden");
            return;
        }
        loginPage.classList.add("hidden");
        mainPage.classList.remove("hidden");
    });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9naW5WaWV3LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3ZpZXdzL2xvZ2luVmlldy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDeEQsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBRTdDLE1BQU0sVUFBVSxTQUFTLENBQUMsU0FBc0IsRUFBRSxRQUFxQjtJQUNuRSxNQUFNLFNBQVMsR0FBRyxRQUFRLENBQUMsY0FBYyxDQUFDLFlBQVksQ0FBb0IsQ0FBQztJQUMzRSxNQUFNLGVBQWUsR0FBRyxRQUFRLENBQUMsY0FBYyxDQUFDLGtCQUFrQixDQUFnQixDQUFDO0lBQ25GLFNBQVMsQ0FBQyxnQkFBZ0IsQ0FBQyxRQUFRLEVBQUUsS0FBSyxFQUFFLENBQUMsRUFBRSxFQUFFO1FBQzdDLENBQUMsQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUNuQixNQUFNLGFBQWEsR0FBSSxRQUFRLENBQUMsY0FBYyxDQUFDLFVBQVUsQ0FBc0IsRUFBRSxLQUFLLENBQUM7UUFDdkYsTUFBTSxjQUFjLEdBQUcsTUFBTSxXQUFXLENBQUMsYUFBYSxDQUFDLENBQUE7UUFFdkQsSUFBSSxPQUFPLENBQUMsQ0FBQyxDQUFDLEtBQUssY0FBYyxFQUFFLENBQUM7WUFDaEMsZUFBZSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUM7WUFDM0MsT0FBTTtRQUNWLENBQUM7UUFFRCxTQUFTLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUNsQyxRQUFRLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUN4QyxDQUFDLENBQUMsQ0FBQztBQUNQLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBlbmNyeXB0VGV4dCB9IGZyb20gXCIuLi91dGlscy9zdHJpbmdNYW5hZ2VyLmpzXCI7XG5pbXBvcnQgeyBzZWNyZXRzIH0gZnJvbSBcIi4uL2xpYnMvc2VjcmV0cy5qc1wiO1xuXG5leHBvcnQgZnVuY3Rpb24gbG9naW5WaWV3KGxvZ2luUGFnZTogSFRNTEVsZW1lbnQsIG1haW5QYWdlOiBIVE1MRWxlbWVudCkge1xuICAgIGNvbnN0IGxvZ2luRm9ybSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibG9naW4tZm9ybVwiKSBhcyBIVE1MRm9ybUVsZW1lbnQ7XG4gICAgY29uc3QgaW52YWxpZFBhc3N3b3JkID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJpbnZhbGlkLXBhc3N3b3JkXCIpIGFzIEhUTUxFbGVtZW50O1xuICAgIGxvZ2luRm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIGFzeW5jIChlKSA9PiB7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgY29uc3QgcGFzc3dvcmRJbnB1dCA9IChkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInBhc3N3b3JkXCIpIGFzIEhUTUxJbnB1dEVsZW1lbnQpPy52YWx1ZTtcbiAgICAgICAgY29uc3QgZW5jcnlwdGVkSW5wdXQgPSBhd2FpdCBlbmNyeXB0VGV4dChwYXNzd29yZElucHV0KVxuICAgICAgICBcbiAgICAgICAgaWYgKHNlY3JldHNbMF0gIT09IGVuY3J5cHRlZElucHV0KSB7XG4gICAgICAgICAgICBpbnZhbGlkUGFzc3dvcmQuY2xhc3NMaXN0LnJlbW92ZShcImhpZGRlblwiKTtcbiAgICAgICAgICAgIHJldHVyblxuICAgICAgICB9XG5cbiAgICAgICAgbG9naW5QYWdlLmNsYXNzTGlzdC5hZGQoXCJoaWRkZW5cIik7XG4gICAgICAgIG1haW5QYWdlLmNsYXNzTGlzdC5yZW1vdmUoXCJoaWRkZW5cIik7XG4gICAgfSk7XG59Il19