import { encryptText } from "../utils/stringManager.js";
import { login } from "../utils/sessionManager.js";
import { secrets } from "../libs/secrets.js";
import { imitateLoadTime } from "../utils/imitateLoadingTime.js";
export function loginView(loginPage, mainPage, spinner) {
    const loginForm = document.getElementById("login-form");
    const invalidPassword = document.getElementById("invalid-password");
    loginForm.addEventListener("submit", async (e) => {
        e.preventDefault();
        const passwordInput = document.getElementById("password")?.value;
        const encryptedInput = await encryptText(passwordInput);
        if (!secrets.length || secrets[0] !== encryptedInput) {
            invalidPassword?.classList.remove("hidden");
            return;
        }
        handleLogin(loginPage, mainPage, spinner);
    });
}
function handleLogin(loginPage, mainPage, spinner) {
    login();
    loginPage.classList.add("hidden");
    spinner.classList.remove("hidden");
    setTimeout(() => {
        spinner.classList.add("hidden");
        mainPage.classList.remove("hidden");
    }, imitateLoadTime());
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9naW5WaWV3LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3ZpZXdzL2xvZ2luVmlldy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDeEQsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQ25ELE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUM3QyxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFFakUsTUFBTSxVQUFVLFNBQVMsQ0FBQyxTQUFzQixFQUFFLFFBQXFCLEVBQUUsT0FBb0I7SUFDekYsTUFBTSxTQUFTLEdBQUcsUUFBUSxDQUFDLGNBQWMsQ0FBQyxZQUFZLENBQW9CLENBQUM7SUFDM0UsTUFBTSxlQUFlLEdBQUcsUUFBUSxDQUFDLGNBQWMsQ0FBQyxrQkFBa0IsQ0FBZ0IsQ0FBQztJQUVuRixTQUFTLENBQUMsZ0JBQWdCLENBQUMsUUFBUSxFQUFFLEtBQUssRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUM3QyxDQUFDLENBQUMsY0FBYyxFQUFFLENBQUM7UUFDbkIsTUFBTSxhQUFhLEdBQUksUUFBUSxDQUFDLGNBQWMsQ0FBQyxVQUFVLENBQXNCLEVBQUUsS0FBSyxDQUFDO1FBQ3ZGLE1BQU0sY0FBYyxHQUFHLE1BQU0sV0FBVyxDQUFDLGFBQWEsQ0FBQyxDQUFBO1FBRXZELElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxJQUFJLE9BQU8sQ0FBQyxDQUFDLENBQUMsS0FBSyxjQUFjLEVBQUUsQ0FBQztZQUNuRCxlQUFlLEVBQUUsU0FBUyxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQztZQUM1QyxPQUFPO1FBQ1gsQ0FBQztRQUVELFdBQVcsQ0FBQyxTQUFTLEVBQUUsUUFBUSxFQUFFLE9BQU8sQ0FBQyxDQUFBO0lBQzdDLENBQUMsQ0FBQyxDQUFDO0FBQ1AsQ0FBQztBQUVELFNBQVMsV0FBVyxDQUFDLFNBQXNCLEVBQUUsUUFBcUIsRUFBRSxPQUFvQjtJQUNwRixLQUFLLEVBQUUsQ0FBQztJQUNSLFNBQVMsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ2xDLE9BQU8sQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ25DLFVBQVUsQ0FBQyxHQUFHLEVBQUU7UUFDWixPQUFPLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUNoQyxRQUFRLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUN4QyxDQUFDLEVBQUUsZUFBZSxFQUFFLENBQUMsQ0FBQztBQUMxQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZW5jcnlwdFRleHQgfSBmcm9tIFwiLi4vdXRpbHMvc3RyaW5nTWFuYWdlci5qc1wiO1xuaW1wb3J0IHsgbG9naW4gfSBmcm9tIFwiLi4vdXRpbHMvc2Vzc2lvbk1hbmFnZXIuanNcIjtcbmltcG9ydCB7IHNlY3JldHMgfSBmcm9tIFwiLi4vbGlicy9zZWNyZXRzLmpzXCI7XG5pbXBvcnQgeyBpbWl0YXRlTG9hZFRpbWUgfSBmcm9tIFwiLi4vdXRpbHMvaW1pdGF0ZUxvYWRpbmdUaW1lLmpzXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBsb2dpblZpZXcobG9naW5QYWdlOiBIVE1MRWxlbWVudCwgbWFpblBhZ2U6IEhUTUxFbGVtZW50LCBzcGlubmVyOiBIVE1MRWxlbWVudCkge1xuICAgIGNvbnN0IGxvZ2luRm9ybSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibG9naW4tZm9ybVwiKSBhcyBIVE1MRm9ybUVsZW1lbnQ7XG4gICAgY29uc3QgaW52YWxpZFBhc3N3b3JkID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJpbnZhbGlkLXBhc3N3b3JkXCIpIGFzIEhUTUxFbGVtZW50O1xuXG4gICAgbG9naW5Gb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgYXN5bmMgKGUpID0+IHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBjb25zdCBwYXNzd29yZElucHV0ID0gKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicGFzc3dvcmRcIikgYXMgSFRNTElucHV0RWxlbWVudCk/LnZhbHVlO1xuICAgICAgICBjb25zdCBlbmNyeXB0ZWRJbnB1dCA9IGF3YWl0IGVuY3J5cHRUZXh0KHBhc3N3b3JkSW5wdXQpXG5cbiAgICAgICAgaWYgKCFzZWNyZXRzLmxlbmd0aCB8fCBzZWNyZXRzWzBdICE9PSBlbmNyeXB0ZWRJbnB1dCkge1xuICAgICAgICAgICAgaW52YWxpZFBhc3N3b3JkPy5jbGFzc0xpc3QucmVtb3ZlKFwiaGlkZGVuXCIpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgaGFuZGxlTG9naW4obG9naW5QYWdlLCBtYWluUGFnZSwgc3Bpbm5lcilcbiAgICB9KTtcbn1cblxuZnVuY3Rpb24gaGFuZGxlTG9naW4obG9naW5QYWdlOiBIVE1MRWxlbWVudCwgbWFpblBhZ2U6IEhUTUxFbGVtZW50LCBzcGlubmVyOiBIVE1MRWxlbWVudCk6IHZvaWQge1xuICAgIGxvZ2luKCk7XG4gICAgbG9naW5QYWdlLmNsYXNzTGlzdC5hZGQoXCJoaWRkZW5cIik7XG4gICAgc3Bpbm5lci5jbGFzc0xpc3QucmVtb3ZlKFwiaGlkZGVuXCIpO1xuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICBzcGlubmVyLmNsYXNzTGlzdC5hZGQoXCJoaWRkZW5cIik7XG4gICAgICAgIG1haW5QYWdlLmNsYXNzTGlzdC5yZW1vdmUoXCJoaWRkZW5cIik7XG4gICAgfSwgaW1pdGF0ZUxvYWRUaW1lKCkpO1xufVxuIl19