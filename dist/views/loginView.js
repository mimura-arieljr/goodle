import { encryptText } from "../utils/stringManager.js";
import { secrets } from "../libs/secrets.js";
export function loginView(loginPage, mainPage, spinner) {
    const loginForm = document.getElementById("login-form");
    const invalidPassword = document.getElementById("invalid-password");
    loginForm.addEventListener("submit", async (e) => {
        e.preventDefault();
        const passwordInput = document.getElementById("password")?.value;
        const encryptedInput = await encryptText(passwordInput);
        if (secrets[0] !== encryptedInput) {
            invalidPassword.classList.remove("hidden");
            return;
        }
        loginPage.classList.add("hidden");
        spinner.classList.remove("hidden");
        setTimeout(() => {
            spinner.classList.add("hidden");
            mainPage.classList.remove("hidden");
        }, imitateLoadTime());
    });
}
function imitateLoadTime() {
    return Math.floor(Math.random() * 2000) + 1000;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9naW5WaWV3LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3ZpZXdzL2xvZ2luVmlldy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDeEQsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBRTdDLE1BQU0sVUFBVSxTQUFTLENBQUMsU0FBc0IsRUFBRSxRQUFxQixFQUFFLE9BQW9CO0lBQ3pGLE1BQU0sU0FBUyxHQUFHLFFBQVEsQ0FBQyxjQUFjLENBQUMsWUFBWSxDQUFvQixDQUFDO0lBQzNFLE1BQU0sZUFBZSxHQUFHLFFBQVEsQ0FBQyxjQUFjLENBQUMsa0JBQWtCLENBQWdCLENBQUM7SUFFbkYsU0FBUyxDQUFDLGdCQUFnQixDQUFDLFFBQVEsRUFBRSxLQUFLLEVBQUUsQ0FBQyxFQUFFLEVBQUU7UUFDN0MsQ0FBQyxDQUFDLGNBQWMsRUFBRSxDQUFDO1FBRW5CLE1BQU0sYUFBYSxHQUFJLFFBQVEsQ0FBQyxjQUFjLENBQUMsVUFBVSxDQUFzQixFQUFFLEtBQUssQ0FBQztRQUN2RixNQUFNLGNBQWMsR0FBRyxNQUFNLFdBQVcsQ0FBQyxhQUFhLENBQUMsQ0FBQTtRQUV2RCxJQUFJLE9BQU8sQ0FBQyxDQUFDLENBQUMsS0FBSyxjQUFjLEVBQUUsQ0FBQztZQUNoQyxlQUFlLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQztZQUMzQyxPQUFNO1FBQ1YsQ0FBQztRQUVELFNBQVMsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ2xDLE9BQU8sQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ25DLFVBQVUsQ0FBQyxHQUFHLEVBQUU7WUFDWixPQUFPLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsQ0FBQztZQUNoQyxRQUFRLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUN4QyxDQUFDLEVBQUUsZUFBZSxFQUFFLENBQUMsQ0FBQztJQUUxQixDQUFDLENBQUMsQ0FBQztBQUNQLENBQUM7QUFFRCxTQUFTLGVBQWU7SUFDcEIsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsR0FBRyxJQUFJLENBQUMsR0FBRyxJQUFJLENBQUM7QUFDbkQsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGVuY3J5cHRUZXh0IH0gZnJvbSBcIi4uL3V0aWxzL3N0cmluZ01hbmFnZXIuanNcIjtcbmltcG9ydCB7IHNlY3JldHMgfSBmcm9tIFwiLi4vbGlicy9zZWNyZXRzLmpzXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBsb2dpblZpZXcobG9naW5QYWdlOiBIVE1MRWxlbWVudCwgbWFpblBhZ2U6IEhUTUxFbGVtZW50LCBzcGlubmVyOiBIVE1MRWxlbWVudCkge1xuICAgIGNvbnN0IGxvZ2luRm9ybSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibG9naW4tZm9ybVwiKSBhcyBIVE1MRm9ybUVsZW1lbnQ7XG4gICAgY29uc3QgaW52YWxpZFBhc3N3b3JkID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJpbnZhbGlkLXBhc3N3b3JkXCIpIGFzIEhUTUxFbGVtZW50O1xuXG4gICAgbG9naW5Gb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgYXN5bmMgKGUpID0+IHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgICAgIGNvbnN0IHBhc3N3b3JkSW5wdXQgPSAoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwYXNzd29yZFwiKSBhcyBIVE1MSW5wdXRFbGVtZW50KT8udmFsdWU7XG4gICAgICAgIGNvbnN0IGVuY3J5cHRlZElucHV0ID0gYXdhaXQgZW5jcnlwdFRleHQocGFzc3dvcmRJbnB1dClcbiAgICAgICAgXG4gICAgICAgIGlmIChzZWNyZXRzWzBdICE9PSBlbmNyeXB0ZWRJbnB1dCkge1xuICAgICAgICAgICAgaW52YWxpZFBhc3N3b3JkLmNsYXNzTGlzdC5yZW1vdmUoXCJoaWRkZW5cIik7XG4gICAgICAgICAgICByZXR1cm5cbiAgICAgICAgfVxuXG4gICAgICAgIGxvZ2luUGFnZS5jbGFzc0xpc3QuYWRkKFwiaGlkZGVuXCIpO1xuICAgICAgICBzcGlubmVyLmNsYXNzTGlzdC5yZW1vdmUoXCJoaWRkZW5cIik7XG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgc3Bpbm5lci5jbGFzc0xpc3QuYWRkKFwiaGlkZGVuXCIpO1xuICAgICAgICAgICAgbWFpblBhZ2UuY2xhc3NMaXN0LnJlbW92ZShcImhpZGRlblwiKTtcbiAgICAgICAgfSwgaW1pdGF0ZUxvYWRUaW1lKCkpO1xuICAgICAgIFxuICAgIH0pO1xufVxuXG5mdW5jdGlvbiBpbWl0YXRlTG9hZFRpbWUoKSA6IG51bWJlciB7XG4gICAgcmV0dXJuIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDIwMDApICsgMTAwMDtcbn0iXX0=