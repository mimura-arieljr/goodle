import { loginView } from "./views/loginView.js";
import { settingsView } from "./views/settingsView.js";
document.addEventListener("DOMContentLoaded", () => {
    const loginPage = document.getElementById("login-page");
    const mainPage = document.getElementById("main-page");
    const settingsPage = document.getElementById("settings-page");
    const questionsPage = document.getElementById("questions-page");
    const startBtn = document.getElementById("start-btn");
    const settingsBtn = document.getElementById("settings-btn");
    const quitBtn = document.getElementById("quit-btn");
    const backBtn = document.getElementById("back-btn");
    loginView(loginPage, mainPage);
    settingsView(settingsPage, mainPage);
    // Show question page
    startBtn.addEventListener("click", () => {
        mainPage.classList.add("hidden");
        questionsPage.classList.remove("hidden");
        displayQuestion(); // Function to dynamically load questions
    });
    // Handle quitting (e.g., reset app state or show an exit message)
    quitBtn.addEventListener("click", () => {
        // Handle quitting
        window.location.reload(); // Just as an example
    });
    // Function to display a question dynamically (for demo purposes)
    function displayQuestion() {
        const questionContainer = document.getElementById("question-container");
        if (questionContainer) {
            questionContainer.innerHTML = `
                <p>What is the capital of France?</p>
                <ul>
                    <li>A. Berlin</li>
                    <li>B. Madrid</li>
                    <li>C. Paris</li>
                    <li>D. Rome</li>
                </ul>
            `;
        }
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUV2RCxRQUFRLENBQUMsZ0JBQWdCLENBQUMsa0JBQWtCLEVBQUUsR0FBRyxFQUFFO0lBQy9DLE1BQU0sU0FBUyxHQUFHLFFBQVEsQ0FBQyxjQUFjLENBQUMsWUFBWSxDQUFnQixDQUFDO0lBQ3ZFLE1BQU0sUUFBUSxHQUFHLFFBQVEsQ0FBQyxjQUFjLENBQUMsV0FBVyxDQUFnQixDQUFDO0lBQ3JFLE1BQU0sWUFBWSxHQUFHLFFBQVEsQ0FBQyxjQUFjLENBQUMsZUFBZSxDQUFnQixDQUFDO0lBQzdFLE1BQU0sYUFBYSxHQUFHLFFBQVEsQ0FBQyxjQUFjLENBQUMsZ0JBQWdCLENBQWdCLENBQUM7SUFFL0UsTUFBTSxRQUFRLEdBQUcsUUFBUSxDQUFDLGNBQWMsQ0FBQyxXQUFXLENBQXNCLENBQUM7SUFDM0UsTUFBTSxXQUFXLEdBQUcsUUFBUSxDQUFDLGNBQWMsQ0FBQyxjQUFjLENBQXNCLENBQUM7SUFDakYsTUFBTSxPQUFPLEdBQUcsUUFBUSxDQUFDLGNBQWMsQ0FBQyxVQUFVLENBQXNCLENBQUM7SUFDekUsTUFBTSxPQUFPLEdBQUcsUUFBUSxDQUFDLGNBQWMsQ0FBQyxVQUFVLENBQXNCLENBQUM7SUFFekUsU0FBUyxDQUFDLFNBQVMsRUFBRSxRQUFRLENBQUMsQ0FBQztJQUMvQixZQUFZLENBQUMsWUFBWSxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBR3JDLHFCQUFxQjtJQUNyQixRQUFRLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxFQUFFLEdBQUcsRUFBRTtRQUNwQyxRQUFRLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUNqQyxhQUFhLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUN6QyxlQUFlLEVBQUUsQ0FBQyxDQUFDLHlDQUF5QztJQUNoRSxDQUFDLENBQUMsQ0FBQztJQUVILGtFQUFrRTtJQUNsRSxPQUFPLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxFQUFFLEdBQUcsRUFBRTtRQUNuQyxrQkFBa0I7UUFDbEIsTUFBTSxDQUFDLFFBQVEsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDLHFCQUFxQjtJQUNuRCxDQUFDLENBQUMsQ0FBQztJQUVILGlFQUFpRTtJQUNqRSxTQUFTLGVBQWU7UUFDcEIsTUFBTSxpQkFBaUIsR0FBRyxRQUFRLENBQUMsY0FBYyxDQUFDLG9CQUFvQixDQUFDLENBQUM7UUFDeEUsSUFBSSxpQkFBaUIsRUFBRSxDQUFDO1lBQ3BCLGlCQUFpQixDQUFDLFNBQVMsR0FBRzs7Ozs7Ozs7YUFRN0IsQ0FBQztRQUNOLENBQUM7SUFDTCxDQUFDO0FBQ0wsQ0FBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBsb2dpblZpZXcgfSBmcm9tIFwiLi92aWV3cy9sb2dpblZpZXcuanNcIjtcbmltcG9ydCB7IHNldHRpbmdzVmlldyB9IGZyb20gXCIuL3ZpZXdzL3NldHRpbmdzVmlldy5qc1wiO1xuXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwiRE9NQ29udGVudExvYWRlZFwiLCAoKSA9PiB7XG4gICAgY29uc3QgbG9naW5QYWdlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJsb2dpbi1wYWdlXCIpIGFzIEhUTUxFbGVtZW50O1xuICAgIGNvbnN0IG1haW5QYWdlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtYWluLXBhZ2VcIikgYXMgSFRNTEVsZW1lbnQ7XG4gICAgY29uc3Qgc2V0dGluZ3NQYWdlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzZXR0aW5ncy1wYWdlXCIpIGFzIEhUTUxFbGVtZW50O1xuICAgIGNvbnN0IHF1ZXN0aW9uc1BhZ2UgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInF1ZXN0aW9ucy1wYWdlXCIpIGFzIEhUTUxFbGVtZW50O1xuXG4gICAgY29uc3Qgc3RhcnRCdG4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInN0YXJ0LWJ0blwiKSBhcyBIVE1MQnV0dG9uRWxlbWVudDtcbiAgICBjb25zdCBzZXR0aW5nc0J0biA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic2V0dGluZ3MtYnRuXCIpIGFzIEhUTUxCdXR0b25FbGVtZW50O1xuICAgIGNvbnN0IHF1aXRCdG4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInF1aXQtYnRuXCIpIGFzIEhUTUxCdXR0b25FbGVtZW50O1xuICAgIGNvbnN0IGJhY2tCdG4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImJhY2stYnRuXCIpIGFzIEhUTUxCdXR0b25FbGVtZW50O1xuXG4gICAgbG9naW5WaWV3KGxvZ2luUGFnZSwgbWFpblBhZ2UpO1xuICAgIHNldHRpbmdzVmlldyhzZXR0aW5nc1BhZ2UsIG1haW5QYWdlKTtcblxuXG4gICAgLy8gU2hvdyBxdWVzdGlvbiBwYWdlXG4gICAgc3RhcnRCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgbWFpblBhZ2UuY2xhc3NMaXN0LmFkZChcImhpZGRlblwiKTtcbiAgICAgICAgcXVlc3Rpb25zUGFnZS5jbGFzc0xpc3QucmVtb3ZlKFwiaGlkZGVuXCIpO1xuICAgICAgICBkaXNwbGF5UXVlc3Rpb24oKTsgLy8gRnVuY3Rpb24gdG8gZHluYW1pY2FsbHkgbG9hZCBxdWVzdGlvbnNcbiAgICB9KTtcblxuICAgIC8vIEhhbmRsZSBxdWl0dGluZyAoZS5nLiwgcmVzZXQgYXBwIHN0YXRlIG9yIHNob3cgYW4gZXhpdCBtZXNzYWdlKVxuICAgIHF1aXRCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgLy8gSGFuZGxlIHF1aXR0aW5nXG4gICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTsgLy8gSnVzdCBhcyBhbiBleGFtcGxlXG4gICAgfSk7XG5cbiAgICAvLyBGdW5jdGlvbiB0byBkaXNwbGF5IGEgcXVlc3Rpb24gZHluYW1pY2FsbHkgKGZvciBkZW1vIHB1cnBvc2VzKVxuICAgIGZ1bmN0aW9uIGRpc3BsYXlRdWVzdGlvbigpIHtcbiAgICAgICAgY29uc3QgcXVlc3Rpb25Db250YWluZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInF1ZXN0aW9uLWNvbnRhaW5lclwiKTtcbiAgICAgICAgaWYgKHF1ZXN0aW9uQ29udGFpbmVyKSB7XG4gICAgICAgICAgICBxdWVzdGlvbkNvbnRhaW5lci5pbm5lckhUTUwgPSBgXG4gICAgICAgICAgICAgICAgPHA+V2hhdCBpcyB0aGUgY2FwaXRhbCBvZiBGcmFuY2U/PC9wPlxuICAgICAgICAgICAgICAgIDx1bD5cbiAgICAgICAgICAgICAgICAgICAgPGxpPkEuIEJlcmxpbjwvbGk+XG4gICAgICAgICAgICAgICAgICAgIDxsaT5CLiBNYWRyaWQ8L2xpPlxuICAgICAgICAgICAgICAgICAgICA8bGk+Qy4gUGFyaXM8L2xpPlxuICAgICAgICAgICAgICAgICAgICA8bGk+RC4gUm9tZTwvbGk+XG4gICAgICAgICAgICAgICAgPC91bD5cbiAgICAgICAgICAgIGA7XG4gICAgICAgIH1cbiAgICB9XG59KTsiXX0=