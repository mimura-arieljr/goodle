import { QuestionTypes } from "../types/BaseQuestionType.js";
export function isAnswerValid(userAnswer, question) {
    const correctAnswer = question.Answer;
    if (Array.isArray(correctAnswer)) {
        const userAnswers = userAnswer
            .split(',')
            .map(a => a.trim().toLowerCase())
            .filter(Boolean)
            .sort();
        const correctAnswers = correctAnswer
            .map(a => a.trim().toLowerCase())
            .sort();
        // For MULT_ANSWER type, check if user's answers match ALL the correct answers
        if (question.QuestionType === QuestionTypes.MULT_ANSWER) {
            return arraysAreEqual(userAnswers, correctAnswers);
        }
        // For non-MULT_ANSWER types, allow if user's answer is within the correct answers
        return userAnswers.length === 1 && correctAnswers.includes(userAnswers[0]);
    }
    // For single answer questions, compare directly
    return userAnswer.trim().toLowerCase() === correctAnswer.trim().toLowerCase();
}
function arraysAreEqual(arr1, arr2) {
    if (arr1.length !== arr2.length)
        return false;
    return arr1.every((val, i) => val === arr2[i]);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5zd2Vyc01hbmFnZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdXRpbHMvYW5zd2Vyc01hbmFnZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFvQixhQUFhLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQTtBQUU5RSxNQUFNLFVBQVUsYUFBYSxDQUFDLFVBQWtCLEVBQUUsUUFBMEI7SUFDeEUsTUFBTSxhQUFhLEdBQUcsUUFBUSxDQUFDLE1BQU0sQ0FBQztJQUV0QyxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLEVBQUUsQ0FBQztRQUMvQixNQUFNLFdBQVcsR0FBRyxVQUFVO2FBQ3pCLEtBQUssQ0FBQyxHQUFHLENBQUM7YUFDVixHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUMsV0FBVyxFQUFFLENBQUM7YUFDaEMsTUFBTSxDQUFDLE9BQU8sQ0FBQzthQUNmLElBQUksRUFBRSxDQUFDO1FBRVosTUFBTSxjQUFjLEdBQUcsYUFBYTthQUMvQixHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUMsV0FBVyxFQUFFLENBQUM7YUFDaEMsSUFBSSxFQUFFLENBQUM7UUFFWiw4RUFBOEU7UUFDOUUsSUFBSSxRQUFRLENBQUMsWUFBWSxLQUFLLGFBQWEsQ0FBQyxXQUFXLEVBQUUsQ0FBQztZQUN0RCxPQUFPLGNBQWMsQ0FBQyxXQUFXLEVBQUUsY0FBYyxDQUFDLENBQUM7UUFDdkQsQ0FBQztRQUVELGtGQUFrRjtRQUNsRixPQUFPLFdBQVcsQ0FBQyxNQUFNLEtBQUssQ0FBQyxJQUFJLGNBQWMsQ0FBQyxRQUFRLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDL0UsQ0FBQztJQUVELGdEQUFnRDtJQUNoRCxPQUFPLFVBQVUsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxXQUFXLEVBQUUsS0FBSyxhQUFhLENBQUMsSUFBSSxFQUFFLENBQUMsV0FBVyxFQUFFLENBQUM7QUFDbEYsQ0FBQztBQUVELFNBQVMsY0FBYyxDQUFDLElBQWMsRUFBRSxJQUFjO0lBQ2xELElBQUksSUFBSSxDQUFDLE1BQU0sS0FBSyxJQUFJLENBQUMsTUFBTTtRQUFFLE9BQU8sS0FBSyxDQUFDO0lBQzlDLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLEdBQUcsS0FBSyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNuRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQmFzZVF1ZXN0aW9uVHlwZSwgUXVlc3Rpb25UeXBlcyB9IGZyb20gXCIuLi90eXBlcy9CYXNlUXVlc3Rpb25UeXBlLmpzXCJcblxuZXhwb3J0IGZ1bmN0aW9uIGlzQW5zd2VyVmFsaWQodXNlckFuc3dlcjogc3RyaW5nLCBxdWVzdGlvbjogQmFzZVF1ZXN0aW9uVHlwZSk6IGJvb2xlYW4ge1xuICAgIGNvbnN0IGNvcnJlY3RBbnN3ZXIgPSBxdWVzdGlvbi5BbnN3ZXI7XG5cbiAgICBpZiAoQXJyYXkuaXNBcnJheShjb3JyZWN0QW5zd2VyKSkge1xuICAgICAgICBjb25zdCB1c2VyQW5zd2VycyA9IHVzZXJBbnN3ZXJcbiAgICAgICAgICAgIC5zcGxpdCgnLCcpXG4gICAgICAgICAgICAubWFwKGEgPT4gYS50cmltKCkudG9Mb3dlckNhc2UoKSlcbiAgICAgICAgICAgIC5maWx0ZXIoQm9vbGVhbilcbiAgICAgICAgICAgIC5zb3J0KCk7XG5cbiAgICAgICAgY29uc3QgY29ycmVjdEFuc3dlcnMgPSBjb3JyZWN0QW5zd2VyXG4gICAgICAgICAgICAubWFwKGEgPT4gYS50cmltKCkudG9Mb3dlckNhc2UoKSlcbiAgICAgICAgICAgIC5zb3J0KCk7XG5cbiAgICAgICAgLy8gRm9yIE1VTFRfQU5TV0VSIHR5cGUsIGNoZWNrIGlmIHVzZXIncyBhbnN3ZXJzIG1hdGNoIEFMTCB0aGUgY29ycmVjdCBhbnN3ZXJzXG4gICAgICAgIGlmIChxdWVzdGlvbi5RdWVzdGlvblR5cGUgPT09IFF1ZXN0aW9uVHlwZXMuTVVMVF9BTlNXRVIpIHtcbiAgICAgICAgICAgIHJldHVybiBhcnJheXNBcmVFcXVhbCh1c2VyQW5zd2VycywgY29ycmVjdEFuc3dlcnMpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gRm9yIG5vbi1NVUxUX0FOU1dFUiB0eXBlcywgYWxsb3cgaWYgdXNlcidzIGFuc3dlciBpcyB3aXRoaW4gdGhlIGNvcnJlY3QgYW5zd2Vyc1xuICAgICAgICByZXR1cm4gdXNlckFuc3dlcnMubGVuZ3RoID09PSAxICYmIGNvcnJlY3RBbnN3ZXJzLmluY2x1ZGVzKHVzZXJBbnN3ZXJzWzBdKTtcbiAgICB9XG5cbiAgICAvLyBGb3Igc2luZ2xlIGFuc3dlciBxdWVzdGlvbnMsIGNvbXBhcmUgZGlyZWN0bHlcbiAgICByZXR1cm4gdXNlckFuc3dlci50cmltKCkudG9Mb3dlckNhc2UoKSA9PT0gY29ycmVjdEFuc3dlci50cmltKCkudG9Mb3dlckNhc2UoKTtcbn1cblxuZnVuY3Rpb24gYXJyYXlzQXJlRXF1YWwoYXJyMTogc3RyaW5nW10sIGFycjI6IHN0cmluZ1tdKTogYm9vbGVhbiB7XG4gICAgaWYgKGFycjEubGVuZ3RoICE9PSBhcnIyLmxlbmd0aCkgcmV0dXJuIGZhbHNlO1xuICAgIHJldHVybiBhcnIxLmV2ZXJ5KCh2YWwsIGkpID0+IHZhbCA9PT0gYXJyMltpXSk7XG59Il19